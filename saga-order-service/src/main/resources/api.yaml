openapi: 3.0.2
info:
  title: Swagger Saga Pattern Order Service - OpenAPI 3.0
  description: |-
    OpenAPI 3.0 specification.
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: viniciusnrgarcia@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 0.0.1
servers:
  - url: /api/v1

tags:
  - name: order
    description: Order operations
    externalDocs:
      description: More information
      url: 'http://swagger.io'

paths:
  /order:
    put:
      tags:
        - order
      summary: Update an existent Order
      description: Update an existent Order by Id
      operationId: updateOrder
      requestBody:
        description: Update an existent Order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
        '405':
          description: Validation exception

    post:
      tags:
        - order
      summary: Add a new order
      description: Add a new order
      operationId: addOrder
      requestBody:
        description: Create a new Order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
    get:
      tags:
        - order
      summary: Find all orders
      description: Find all orders
      operationId: findOrders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid status value


  /order/findByStatus:
    get:
      tags:
        - order
      summary: Finds Order by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findOrdersByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - pending
              - processing
              - completed
              - error
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid status value

  '/order/{orderId}':
    get:
      tags:
        - order
      summary: Find Order by ID
      description: Returns a single order
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found

    delete:
      tags:
        - order
      summary: Deletes a Order
      description: ''
      operationId: deleteOrder
      parameters:
        - name: apiKey
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: orderId
          in: path
          description: Order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid Order value


components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        orderId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        orderDate:
          type: string
          format: date-time
      xml:
        name: order
